# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.

      # Runs a file from repository
      - name: Run demo.sh
        run: sh ./demo.sh
        shell: bash

      # Runs the command on failure by checking the status check function: failure()
      - name: Run on failure
        if: ${{ failure() }}
        run: echo "one of the previous step(s) failed"

  deploy:
    runs-on: ubuntu-latest

    # depend on another job (for ex. build)
    needs: build

    # runs this job even if the build job is not successful
    if: ${{ always() }}

    steps:
      - name: Run another one-line script
        run: echo "Hello, galaxy!"

  # This runs in parallel
  update:
    runs-on: ubuntu-latest

    # Environment variables (this will be available for all the steps in the job)
    env:
      ENV_KEY1: "universe"

    steps:
      - name: Using contexts
        # uses runner.os context to get the operating system of the runner
        run: echo "Hello from ${{ runner.os }}"

      - name: Run another one-line script
        env:
          ENV_KEY2: "Hello"

        # uses global and step environment variables
        run: echo "$ENV_KEY2, $ENV_KEY1!"
